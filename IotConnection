package com.usaa.iot.web.hbase;

import java.io.IOException;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.hbase.HBaseConfiguration;
import org.apache.hadoop.hbase.TableName;
import org.apache.hadoop.hbase.client.Connection;
import org.apache.hadoop.hbase.client.ConnectionFactory;
//import org.apache.hadoop.hbase.client.Get;
//import org.apache.hadoop.hbase.client.HConnection;
//import org.apache.hadoop.hbase.client.HConnectionManager;
//import org.apache.hadoop.hbase.client.HTableInterface;
//import org.apache.hadoop.hbase.client.Result;
import org.apache.hadoop.hbase.client.ResultScanner;
import org.apache.hadoop.hbase.client.Scan;
import org.apache.hadoop.hbase.client.Table;
//import org.apache.hadoop.hbase.util.Bytes;

public class IotConnection {

	private Configuration conf = null;
	private Connection conn = null;
	// private HConnection conn = null;
	
	private static IotConnection singleInstance = null;

	IotConnection() throws IOException {
		if (conf == null) {

			conf = HBaseConfiguration.create();
			conf.set("hbase.master", "10.69.142.193:60000");
			conf.set("hbase.master.port", "60000");
			conf.set("hbase.zookeeper.property.clientPort", "2181");		
			conf.set("hbase.zookeeper.quorum", "10.69.142.130");
			if (conn == null) {
				conn = ConnectionFactory.createConnection(conf);
				// conn = HConnectionManager.createConnection(conf);
			}
		}
	}

	public static synchronized IotConnection getInstance() throws IOException {

		if (singleInstance == null) {
			singleInstance = new IotConnection();
		}
		return

		singleInstance;

	}

	public ResultScanner getScanResults(String tableName, Scan s) throws

	IOException {
		Table t = conn.getTable(TableName.valueOf(tableName));
		//HTableInterface t = getTableHandle(tableName);
		ResultScanner r =

		null;
		try {
			r = t.getScanner(s);
		} catch (IOException e) {
			throw e;
		} finally {

			t.close();
		}
		return r;
	}

	public ResultScanner getScanResults(byte[] tableName, Scan s) throws

	IOException {
		Table t = conn.getTable(TableName.valueOf(tableName));
		//HTableInterface t = getTableHandle(tableName);
		ResultScanner r =

		null;
		try {
			r = t.getScanner(s);
		} catch (IOException e) {
			throw e;
		} finally {

			t.close();
		}

		return r;
	}

	/*public HTableInterface getTableHandle(String tableName) throws IOException {

		return getTableHandle(Bytes.toBytes(tableName));
	}

	public HTableInterface getTableHandle(byte[] tableName) throws IOException {

		return conn.getTable(tableName);
	}*/
}
