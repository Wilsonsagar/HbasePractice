package com.usaa.iot.web.hbase;

import java.io.IOException;
import java.io.StringWriter;
import java.util.HashMap;
import java.util.Map;

import org.apache.hadoop.hbase.client.Result;
import org.apache.hadoop.hbase.client.ResultScanner;
import org.apache.hadoop.hbase.client.Scan;
import org.apache.hadoop.hbase.filter.RegexStringComparator;
import org.apache.hadoop.hbase.filter.RowFilter;
import org.apache.hadoop.hbase.filter.CompareFilter.CompareOp;
import org.apache.hadoop.hbase.util.Bytes;
import org.codehaus.jackson.JsonFactory;
import org.codehaus.jackson.JsonGenerator;

public class IotRunControlScans {

	public static void main(String[] args) throws IOException {
		IotConnection conn = new IotConnection();
		String name = String.format("^%s\\|.*\\|%s$", "LOWES", "user");

		RegexStringComparator keyRegEx = new RegexStringComparator(name);
		RowFilter rowFilter = new RowFilter(CompareOp.EQUAL, keyRegEx);
		Scan scan = new Scan();
		scan.setFilter(rowFilter);
		// Scanning the required columns

		ColumnMap cm = new ColumnMap();
		HashMap<String, String> hm = cm.getCFColumns("asset_mapping");

		for (Map.Entry<String, String> cf : hm.entrySet()) {
			scan.addColumn(Bytes.toBytes(cf.getKey()),
					Bytes.toBytes(cf.getValue()));
		}
		ResultScanner rs = conn.getScanResults("asset_mapping", scan);

		StringWriter w = new StringWriter();
		JsonGenerator gen = new JsonFactory().createJsonGenerator(w);

		gen.writeStartArray();

		for (Result result : rs) {
			gen.writeStartObject();
			String rowKey = Bytes.toString(result.getRow());
			String[] arrKey = rowKey.split("\\|");
			gen.writeStringField("provider", arrKey[0].toString());
			gen.writeStringField("party_type", arrKey[1].toString());
			for (Map.Entry<String, String> cf : hm.entrySet()) {
				String val = cf.getValue();
				gen.writeStringField(
						val,
						Bytes.toString(result.getValue(
								Bytes.toBytes(cf.getKey()),
								Bytes.toBytes(cf.getValue()))));
			}

			gen.writeEndObject();
		}
		gen.writeEndArray();
		gen.flush();
		gen.close();
		System.out.println(w.toString());
	}

}
